!function(){"use strict";class e{constructor(e,t,s){this.cardName=e.cardName,this.cardLink=e.cardLink,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick(this)}))}_handleLikeIcon(){this._likeButton.classList.toggle("card__like-button_enabled")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}getView(){return this._cardTemplate=document.querySelector(this._cardSelector).content.querySelector(".card"),this._cardElement=this._cardTemplate.cloneNode(!0),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardTitleEl.textContent=this.cardName,this._cardImageEl.setAttribute("src",this.cardLink),this._cardImageEl.setAttribute("alt",this.cardName),this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputList=[...this._formElement.querySelectorAll(this._inputSelector)],this._submitButton=this._formElement.querySelector(this._submitButtonSelector)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}disableButton(){return this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){return this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}toggleButtonState(){return this._hasInvalidInput()?this.disableButton():this._enableButton()}resetValidation(){this.disableButton(),this._inputList.forEach((e=>{this._hideInputError(e)}))}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=document.querySelector(`${t}-close`)}open(){this._popupElement.classList.add("modal_opened"),window.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("click",this._handleOverlayClick)}close(){this._popupElement.classList.remove("modal_opened"),window.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("click",this._handleOverlayClick)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};_handleOverlayClick=e=>{e.target.classList.contains("modal_opened")&&this.close()};setEventListeners(){this._closeButton.addEventListener("click",(()=>this.close()))}}class r extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputSelector=".modal__input",this._inputList=[...this._popupForm.querySelectorAll(this._inputSelector)],this._handleFormSubmit=t}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}}const n=document.querySelector(".profile__edit-button"),i=document.querySelector(".profile__add-button"),o=document.forms["add-card-form"];function a(t){return new e(t,"#card-template",m).getView()}const l=new class{constructor(e,t){let{items:s,renderer:r}=e;this._renderedItems=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._renderedItems.forEach((e=>this._renderer(e)))}addItem(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";this._container[t](e)}}({items:[{cardName:"Yosemite Valley",cardLink:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{cardName:"Lake Louise",cardLink:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{cardName:"Bald Mountains",cardLink:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{cardName:"Latemar",cardLink:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{cardName:"Vanoise National Park",cardLink:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{cardName:"Lago di Braies",cardLink:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=a(e);l.addItem(t,"append")}},".cards__list");l.renderItems();const c=new class{constructor(e){let{userName:t,userJob:s}=e;this.userName=document.querySelector(t),this.userJob=document.querySelector(s)}getUserInfo(){return this._userInfo={userName:this.userName.textContent,userJob:this.userJob.textContent},this._userInfo}setUserInfo(e){let{userName:t,userJob:s}=e;this.userName.textContent=t,this.userJob.textContent=s}}({userName:".profile__name",userJob:".profile__description"}),u=new class extends s{constructor(e){super({popupSelector:e}),this._popupImage=this._popupElement.querySelector(".modal__preview-image"),this._popupText=this._popupElement.querySelector(".modal__preview-text")}open(e){let{cardName:t,cardLink:s}=e;this._popupImage.setAttribute("src",s),this._popupImage.setAttribute("alt",t),this._popupText.textContent=t,super.open()}}("#preview-modal"),d=new r("#profile-modal",(function(e){c.setUserInfo(e),d.close()})),_=new r("#add-modal",(function(e){const t=a(e);l.addItem(t,"prepend"),_.close(),o.reset(),h["add-card-form"].disableButton()}));function m(e){u.open(e)}u.setEventListeners(),d.setEventListeners(),_.setEventListeners(),n.addEventListener("click",(()=>{h["profile-form"].resetValidation();const e=c.getUserInfo();d.setInputValues(e),d.open()})),i.addEventListener("click",(()=>{_.open()}));const h={};var p;p={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},[...document.querySelectorAll(p.formSelector)].forEach((e=>{const s=new t(p,e),r=e.getAttribute("name");h[r]=s,s.enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,